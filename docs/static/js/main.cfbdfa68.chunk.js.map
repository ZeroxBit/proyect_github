{"version":3,"sources":["components/card/Card.js","components/hero/Hero.js","services/connection.js","services/userServices.js","components/Input/InputSearch.js","components/wrapper/Wrapper.js","hooks/useObserver.js","views/Users.js","App.js","hooks/useResize.js","components/navBar/sections/LogoImage.js","components/navBar/sections/Brand.js","components/navBar/sections/ListItems.js","components/navBar/NavBar.js","components/box/BoxRepo.js","services/respoServices.js","views/Repositories.js","router/MainRouter.js","index.js"],"names":["Card","img","text","cardPointer","className","src","alt","Hero","extraClass","props","children","instanceAxios","axios","create","baseURL","env","API_URL","interceptors","request","use","headers","Accept","HEADER","API","get","path","params","a","getSearchUsersServices","name","page","PATH_SEARCH_USERS","q","per_page","InputSearch","onChange","value","onSubmit","isLoading","placeholder","e","preventDefault","icon","faSearch","Wrapper","useObserver","distance","externalRef","useState","isNearScreen","setShow","console","log","useEffect","observer","element","current","Promise","resolve","IntersectionObserver","then","rootMargin","observe","disconnect","entries","isIntersecting","Users","users","setUsers","search","setSearch","setIsLoading","hasError","setHasError","pageNumber","setPageNumber","isFirstSearch","setIsFirstSearch","refObserver","useRef","handlePaginate","nextPage","result","items","data","handleChange","target","handleSubmit","initialPage","map","i","avatar_url","login","ref","App","useResize","breakpoint","isMobil","setIsMobil","width","setWidth","BREAKPOINT_MOBIL","window","addEventListener","handleUpdate","removeEventListener","innerWidth","currentWidth","LogoImage","SRC_LOGO","height","Brand","click","to","role","aria-label","aria-expanded","data-target","onClick","aria-hidden","Items","currentClass","menuItems","activeClass","exact","activeClassName","ListItems","showMenuMobil","id","base","handleClassListItems","NavBar","setShowMenuMobil","BoxRepo","image","fullName","userLogin","description","urlRepo","href","faBookReader","getSearchReposServices","repo","PATH_REPOSITORIES","Repositories","repositories","setRepositories","owner","full_name","html_url","MainRouter","basename","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfbdfa68.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Card = ({ img, text, cardPointer }) => {\r\n    return (\r\n        <div className={`card ${cardPointer ? \"is-clickable\" : \"\"}`}>\r\n            <div className=\"card-image\">\r\n                <figure className=\"image is-4by3\">\r\n                    <img src={img} alt={text} />\r\n                </figure>\r\n            </div>\r\n            <div className=\"card-content\">\r\n                <p className=\"title is-4\">{text}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCard.propTypes = {\r\n    img: PropTypes.string.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    cardPointer: PropTypes.bool,\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Hero = ({ extraClass = \"\", ...props }) => {\r\n    return <section className={`hero ${extraClass}`}>{props.children}</section>;\r\n};\r\n\r\nHero.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Hero;\r\n","import axios from \"axios\";\r\nimport env from \"react-dotenv\";\r\n\r\n// se genera una instancia de axios, agregandole el tributo {baseURL}\r\n// para usarlos en todos los request donde se invoque!!\r\nconst instanceAxios = axios.create({\r\n    baseURL: env.API_URL,\r\n});\r\n\r\n// Agrega el header{Accept}, a todos los request!!\r\ninstanceAxios.interceptors.request.use((request) => {\r\n    request.headers.Accept = env.HEADER;\r\n\r\n    return request;\r\n});\r\n\r\n/**\r\n * Exporta la instancia de axios, previamente configurada,\r\n * Con el unico vervo http, ya que solo se utiliza ese en este proyecto!!\r\n */\r\nexport const API = {\r\n    get: async (path, params) => {\r\n        return await instanceAxios.get(path, { params });\r\n    },\r\n};\r\n","import { API } from \"./connection\";\r\nimport env from \"react-dotenv\";\r\n\r\n/**\r\n * @param {string} name El nombre de usuario a buscar\r\n * @returns Regresa un listado de usuarios\r\n */\r\nexport const getSearchUsersServices = async (name, page = 1) => {\r\n    return await API.get(env.PATH_SEARCH_USERS, {\r\n        q: name,\r\n        per_page: 30,\r\n        page,\r\n    });\r\n};\r\n\r\n/**\r\n * Recibe el parametro obligatorio y regresa un unico usuario!!\r\n * @param {string} name El nombre de usuario a buscar\r\n * @returns Regresa el usuario buscado\r\n */\r\nexport const getUserInfo = async (name) => {\r\n    return await API.get(`${env.PATH_USERS}/${name}`);\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst InputSearch = ({ onChange, value, onSubmit, isLoading, placeholder }) => {\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSubmit();\r\n    };\r\n\r\n    return (\r\n        <form className=\"field\" onSubmit={handleSubmit}>\r\n            <p className=\"control has-icons-right\">\r\n                <input\r\n                    className=\"input is-medium\"\r\n                    placeholder={placeholder}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                />\r\n\r\n                <button\r\n                    className={`button input-search__button ${\r\n                        isLoading ? \"is-loading\" : \"\"\r\n                    }`}\r\n                >\r\n                    <FontAwesomeIcon icon={faSearch} />\r\n                </button>\r\n            </p>\r\n        </form>\r\n    );\r\n};\r\n\r\nInputSearch.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    isLoading: PropTypes.bool,\r\n    placeholder: PropTypes.string,\r\n};\r\n\r\nexport default InputSearch;\r\n","import React from \"react\";\r\n\r\nconst Wrapper = ({ children }) => {\r\n    return <div className=\"container mt-6\">{children}</div>;\r\n};\r\n\r\nexport default Wrapper;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useObserver = ({ distance = \"100px\", externalRef }) => {\r\n    const [isNearScreen, setShow] = useState(false);\r\n    console.log(\"useObserver\", distance, externalRef);\r\n\r\n    useEffect(() => {\r\n        if (!externalRef) return;\r\n        let observer;\r\n\r\n        const element = externalRef.current;\r\n\r\n        Promise.resolve(\r\n            typeof IntersectionObserver !== \"undefined\"\r\n                ? IntersectionObserver\r\n                : import(\"intersection-observer\")\r\n        ).then(() => {\r\n            observer = new IntersectionObserver(onChange, {\r\n                rootMargin: distance,\r\n            });\r\n\r\n            if (element) observer.observe(element);\r\n        });\r\n\r\n        return () => observer && observer.disconnect();\r\n    });\r\n\r\n    const onChange = (entries, observer) => {\r\n        const el = entries[0];\r\n        if (el.isIntersecting) {\r\n            setShow(true);\r\n            observer.disconnect();\r\n        } else {\r\n            setShow(false);\r\n        }\r\n    };\r\n\r\n    return { isNearScreen };\r\n};\r\n\r\nexport default useObserver;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Card from \"../components/card/Card\";\r\nimport Hero from \"../components/hero/Hero\";\r\nimport { getSearchUsersServices } from \"../services/userServices\";\r\nimport InputSearch from \"../components/Input/InputSearch\";\r\nimport Wrapper from \"../components/wrapper/Wrapper\";\r\nimport useObserver from \"../hooks/useObserver\";\r\n\r\nconst Users = () => {\r\n    const [users, setUsers] = useState(null);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [hasError, setHasError] = useState(false);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [isFirstSearch, setIsFirstSearch] = useState(true);\r\n    const refObserver = useRef(null);\r\n    const { isNearScreen } = useObserver({\r\n        distance: \"100px\",\r\n        externalRef: refObserver,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if ((!isLoading, !isFirstSearch)) {\r\n            handlePaginate();\r\n        }\r\n    }, [isNearScreen]);\r\n\r\n    const handlePaginate = async () => {\r\n        try {\r\n            const nextPage = pageNumber + 1;\r\n            const result = await getSearchUsersServices(search, nextPage);\r\n            setPageNumber(nextPage);\r\n\r\n            setUsers({\r\n                ...users,\r\n                items: [...users.items, ...result.data.items],\r\n            });\r\n            if (hasError) setHasError(false);\r\n        } catch (error) {\r\n            setHasError(true);\r\n        }\r\n    };\r\n\r\n    const handleChange = async (e) => {\r\n        const name = e.target.value;\r\n        setSearch(name);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        setIsLoading(true);\r\n        const initialPage = 1;\r\n        try {\r\n            const result = await getSearchUsersServices(search, initialPage);\r\n            setUsers(result.data);\r\n            setIsFirstSearch(false);\r\n            setPageNumber(initialPage);\r\n            if (hasError) setHasError(false);\r\n        } catch (error) {\r\n            setHasError(true);\r\n        }\r\n\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const handlRenderUsers = () => {\r\n        if (!users) return null;\r\n        return users.items.map(({ avatar_url, login }, i) => (\r\n            <div className=\"column is-3\" key={`${login}-${i}`}>\r\n                <Card img={avatar_url} text={login} cardPointer />\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div className=\"columns\">\r\n                <div className=\"column is-12\">\r\n                    <Hero>\r\n                        <div className=\"hero-body\">\r\n                            <p className=\"title\">Buscame en Github</p>\r\n                            <div className=\"column is-6\">\r\n                                <InputSearch\r\n                                    onChange={handleChange}\r\n                                    value={search}\r\n                                    onSubmit={handleSubmit}\r\n                                    isLoading={isLoading}\r\n                                    placeholder=\"Ingresa un nombre\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Hero>\r\n                </div>\r\n            </div>\r\n            {hasError && (\r\n                <div className=\"columns is-12\">\r\n                    <h2 className=\"title is-2\">\r\n                        Ups!, Ha ocurrido un error :(\r\n                    </h2>\r\n                </div>\r\n            )}\r\n            <div className=\"columns is-multiline\">\r\n                {handlRenderUsers()}\r\n                <div ref={refObserver}></div>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport \"./style/style.scss\";\r\nimport Users from \"./views/Users\";\r\n\r\nfunction App() {\r\n    return <Users />;\r\n}\r\n\r\nexport default App;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// este hook permite saber el tamaño de la pantalla en todo momento!!\r\nconst useResize = (breakpoint = 768) => {\r\n    const [isMobil, setIsMobil] = useState(false);\r\n    const [width, setWidth] = useState(0);\r\n\r\n    const BREAKPOINT_MOBIL = breakpoint;\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", handleUpdate);\r\n\r\n        handleUpdate();\r\n\r\n        return () => window.removeEventListener(\"resize\", handleUpdate);\r\n    }, [window.innerWidth]);\r\n\r\n    const handleUpdate = () => {\r\n        let currentWidth = window.innerWidth;\r\n\r\n        setIsMobil(currentWidth <= BREAKPOINT_MOBIL);\r\n\r\n        setWidth(currentWidth);\r\n    };\r\n\r\n    return [width, isMobil];\r\n};\r\n\r\nexport default useResize;\r\n","import React from \"react\";\r\nimport env from \"react-dotenv\";\r\n\r\nconst LogoImage = () => {\r\n    return <img src={env.SRC_LOGO} width=\"112\" height=\"28\" />;\r\n};\r\n\r\nexport default LogoImage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LogoImage from \"./LogoImage\";\r\n\r\nconst Brand = ({ click }) => {\r\n    return (\r\n        <div className=\"navbar-brand\">\r\n            <Link className=\"navbar-item\" to=\"/\">\r\n                <LogoImage />\r\n            </Link>\r\n\r\n            <Link\r\n                role=\"button\"\r\n                className=\"navbar-burger\"\r\n                aria-label=\"menu\"\r\n                aria-expanded=\"false\"\r\n                data-target=\"navbarBasicExample\"\r\n                onClick={click}\r\n                to=\"\"\r\n            >\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Brand;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { menuItems } from \"../config.json\";\r\n\r\n/**\r\n * El listado y valores a usar, estan definidos en uns archivo json {menuItems}\r\n * @param {string} currentClass La clase a ser aplicada\r\n * @returns regresa un listado de componentes NavLink\r\n */\r\nconst Items = ({ currentClass }) => {\r\n    const handleRenderItems = () => {\r\n        return menuItems.map(({ path, activeClass, name, exact }, i) => {\r\n            return (\r\n                <NavLink\r\n                    key={`${name}-${i}`}\r\n                    to={path}\r\n                    exact\r\n                    className=\"navbar-item\"\r\n                    activeClassName={activeClass}\r\n                >\r\n                    {name}\r\n                </NavLink>\r\n            );\r\n        });\r\n    };\r\n\r\n    return <div className={currentClass}>{handleRenderItems()}</div>;\r\n};\r\n\r\n/**\r\n * Se usa un Hook{useResize} para saber cuando esta en un dispositivo mobil\r\n * @param {bool} showMenuMobil define si se despliega el menu en mobil\r\n * @returns El listado de items del menu!!\r\n */\r\nconst ListItems = ({ showMenuMobil, isMobil }) => {\r\n    const handleClassListItems = () => {\r\n        const base = \"navbar-start \";\r\n        const mobil =\r\n            \"is-flex is-align-items-flex-end is-flex-direction-column\";\r\n        if (isMobil) {\r\n            return base + mobil;\r\n        }\r\n\r\n        return base;\r\n    };\r\n\r\n    return (\r\n        <div\r\n            id=\"navbarBasicExample\"\r\n            className={`navbar-menu ${showMenuMobil ? \"is-active\" : \"\"}`}\r\n        >\r\n            <Items currentClass={handleClassListItems()} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListItems;\r\n","import React, { useState } from \"react\";\r\nimport useResize from \"../../hooks/useResize\";\r\nimport Brand from \"./sections/Brand\";\r\nimport ListItems from \"./sections/ListItems\";\r\n\r\n// Menu!!\r\nconst NavBar = () => {\r\n    const [showMenuMobil, setShowMenuMobil] = useState(false);\r\n    const [, isMobil] = useResize();\r\n    const handleToggleMenuInMobil = () => setShowMenuMobil(!showMenuMobil);\r\n\r\n    return (\r\n        <nav\r\n            className=\"navbar is-fixed-top is-dark\"\r\n            role=\"navigation\"\r\n            aria-label=\"main navigation\"\r\n        >\r\n            <div className=\"container\">\r\n                <Brand click={handleToggleMenuInMobil} />\r\n                <ListItems showMenuMobil={showMenuMobil} isMobil={isMobil} />\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBookReader } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst BoxRepo = ({ image, fullName, userLogin, description, urlRepo }) => {\r\n    return (\r\n        <div className=\"box\">\r\n            <article className=\"media\">\r\n                <div className=\"media-left\">\r\n                    <figure className=\"image is-64x64\">\r\n                        <img src={image} alt={fullName} />\r\n                    </figure>\r\n                </div>\r\n                <div className=\"media-content\">\r\n                    <div className=\"content\">\r\n                        <p>\r\n                            <strong>{fullName}</strong>{\" \"}\r\n                            <small>@{userLogin}</small>\r\n                            <br />\r\n                            {description}\r\n                        </p>\r\n                    </div>\r\n                    <nav className=\"level is-mobile\">\r\n                        <div className=\"level-left\">\r\n                            <a\r\n                                href={urlRepo}\r\n                                target=\"_blank\"\r\n                                className=\"level-item\"\r\n                                aria-label=\"reply\"\r\n                            >\r\n                                <span className=\"icon is-small\">\r\n                                    <FontAwesomeIcon icon={faBookReader} />\r\n                                </span>\r\n                            </a>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </article>\r\n        </div>\r\n    );\r\n};\r\n\r\nBoxRepo.propTypes = {};\r\n\r\nexport default BoxRepo;\r\n","import { API } from \"./connection\";\r\nimport env from \"react-dotenv\";\r\n\r\n/**\r\n * @param {string} repo El repositorio a buscar!!\r\n * @returns Regresa un listado de repositorios\r\n */\r\nexport const getSearchReposServices = async (repo, page = 1) => {\r\n    return await API.get(env.PATH_REPOSITORIES, {\r\n        q: repo,\r\n        per_page: 30,\r\n        page,\r\n    });\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Hero from \"../components/hero/Hero\";\r\nimport Wrapper from \"../components/wrapper/Wrapper\";\r\nimport BoxRepo from \"../components/box/BoxRepo\";\r\nimport { getSearchReposServices } from \"../services/respoServices\";\r\nimport InputSearch from \"../components/Input/InputSearch\";\r\nimport useObserver from \"../hooks/useObserver\";\r\n\r\nconst Repositories = () => {\r\n    const [repositories, setRepositories] = useState(null);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [hasError, setHasError] = useState(false);\r\n    const [isFirstSearch, setIsFirstSearch] = useState(true);\r\n    const refObserver = useRef(null);\r\n    const { isNearScreen } = useObserver({\r\n        distance: \"100px\",\r\n        externalRef: refObserver,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if ((!isLoading, !isFirstSearch)) {\r\n            handlePaginate();\r\n        }\r\n    }, [isNearScreen]);\r\n\r\n    const handlePaginate = async () => {\r\n        try {\r\n            const nextPage = pageNumber + 1;\r\n            const result = await getSearchReposServices(search, nextPage);\r\n            setPageNumber(nextPage);\r\n\r\n            setRepositories({\r\n                ...repositories,\r\n                items: [...repositories.items, ...result.data.items],\r\n            });\r\n            if (hasError) setHasError(false);\r\n        } catch (error) {\r\n            setHasError(true);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        setIsLoading(true);\r\n        setPageNumber(1);\r\n        try {\r\n            const result = await getSearchReposServices(search, pageNumber);\r\n            setRepositories(result.data);\r\n            setIsFirstSearch(false);\r\n            if (hasError) setHasError(false);\r\n        } catch (error) {\r\n            setHasError(true);\r\n        }\r\n\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const handleChange = async (e) => {\r\n        const name = e.target.value;\r\n        setSearch(name);\r\n    };\r\n\r\n    const handlRenderRepositories = () => {\r\n        if (!repositories) return null;\r\n\r\n        return repositories.items.map(\r\n            ({ owner, full_name, description, html_url }, i) => (\r\n                <div className=\"column is-6\" key={`${full_name}-${i}`}>\r\n                    <BoxRepo\r\n                        image={owner.avatar_url}\r\n                        userLogin={owner.login}\r\n                        fullName={full_name}\r\n                        description={description}\r\n                        urlRepo={html_url}\r\n                    />\r\n                </div>\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Wrapper>\r\n            <div className=\"columns\">\r\n                <div className=\"column is-12\">\r\n                    <Hero>\r\n                        <div className=\"hero-body\">\r\n                            <p className=\"title\">Busca un repositorio</p>\r\n                            <div className=\"column is-6\">\r\n                                <InputSearch\r\n                                    onChange={handleChange}\r\n                                    value={search}\r\n                                    onSubmit={handleSubmit}\r\n                                    isLoading={isLoading}\r\n                                    placeholder=\"Ingresa un repositorio\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </Hero>\r\n                </div>\r\n            </div>\r\n            {hasError && (\r\n                <div className=\"columns is-12\">\r\n                    <h2 className=\"title is-2\">\r\n                        Ups!, Ha ocurrido un error :(\r\n                    </h2>\r\n                </div>\r\n            )}\r\n            <div className=\"columns is-multiline\">\r\n                {handlRenderRepositories()}\r\n                <div ref={refObserver}></div>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Repositories;\r\n","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport NavBar from \"../components/navBar/NavBar.js\";\r\nimport Repositories from \"../views/Repositories\";\r\n\r\nexport const MainRouter = () => {\r\n    return (\r\n        <Router basename=\"proyect_github\">\r\n            <NavBar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={App} />\r\n                <Route exact path=\"/repositorios\" component={Repositories} />\r\n\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { MainRouter } from \"./router/MainRouter\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <MainRouter />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}